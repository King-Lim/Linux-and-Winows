1.Linux硬链接与软链接
    文件在Linux上被分成两个部分：用户数据（user data）与元数据（metadata）
    用户数据：文件数据块（data block），数据块是记录文件真实内容的地方；
    元数据：指的是文件的附加属性，如文件名、文件大小、创建时间、owner、文件所在的inode信息等；
    【重点：在Linux中，元数据的inode号（inode号即索引节点号）才是文件的唯一标识而非文件名】
        可以使用stat，ls -i查看inode号
        @硬链接：一个inode号对应多个文件（同一个文件使用了多个别名）
        ln命令为现有文件创建新的硬链接
            硬链接的特性：
            *文件有相同的inode及data block；
            *只能对已存在的文件进行创建；
            *不能交叉文件系统进行硬链接的创建；
            *不能对目录进行创建，只可对文件进行创建；
            *删除一个硬链接文件并不影响其他有相同inode号的文件
        @软链接：文件用户数据块中存放内容是另一文件的路径名的指向，则该文件就是软链接
                软链接就是一个普通文件，只是数据块内容特殊；软链接有自己的inode号以及用户数据
        ln -s命令创建软链接
            软链接的特性：
            *软链接有自己的文件属性及权限等；
            *可对不存在的文件或目录创建软链接；
            *软链接可交叉文件系统；
            *软链接可对文件或目录创建；
            *创建软链接时，链接计数i_nlink不会增加；
            *删除软链接并不影响被指向的文件，但若指向的原文件被删除，则相关软链接称为死链接或悬挂的软链接
                （dangling link，若指向路径文件被重新创建，死链接可恢复为正常的软链接）

2.文件系统通常会将这两部分的数据分别存放在不同的区块
    权限与属性等放置到inode中；
    实际数据放置到数据区块中；
    @数据区块（data block）
        数据区块是用来放置文件数据的地方，在ext2文件系统中所支持的区块大小有1K、2K、4K三种；
        ext2文件系统的限制：
            *原则上，区块的大小与数量在格式化完就不能够再修改（除非重新格式化）；
            *每个区块内最多只能放置一个文件的数据；
            *如果文件大于区块的大小，则一个文件会占用多个区块的数量；
            *如果文件小于区块的大小，则该区块的剩余容量就不能够再被使用了；
    @inode table（inode表）
        inode记录的内容：
            *该文件的读写属性（read、write、execute）；
            *该文件的拥有者与用户组（owner、group）；
            *该文件的大小；
            *该文件建立或状态改变的时间（ctime）；
            *最近一次的读取时间（atime）；
            *最近修改的时间（mtime）；
            *定义文件特性的标识（flag），如SetUID；
            *该文件数据内容的指向（pointer）；
        inode的其他特点：
            *每个inode大小均固定为128B（新的ext4与xfs可设置到256B）；
            *每个文件仅会占用一个inode；
            *文件系统能够建立的文件数量与inode的数量有关；
            *系统读取文件时需要先找到inode，并分析inode所记录的权限与用户是否符合，如果符合才会读取区块的内容；
